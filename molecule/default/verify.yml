---

- name: Verify
  hosts: molecule_hosts
  gather_facts: yes
  tasks:
    - name: Include role vars
      include_vars: ../../vars/main.yml

    - name: Read system-auth config file
      command: cat /etc/pam.d/system-auth
      changed_when: no
      register: read_system_auth_config_result

    - name: Read password-auth config file
      command: cat /etc/pam.d/password-auth
      changed_when: no
      register: read_password_auth_config_result

    - name: Read login.defs config file
      command: cat /etc/login.defs
      changed_when: no
      register: read_login_defs_config_result

    - name: Verify that system-auth config matches inventory
      assert:
        that:
          - stdout is search(login_defs_cracklib_pam_d_config)
          - stdout is search(login_defs_pam_unix_pam_d_config)
      when: ansible_facts.distribution_major_version is version("6", "<=")
      vars:
        stdout: "{{ read_system_auth_config_result.stdout }}"

    - name: Verify that system-auth config matches inventory
      assert:
        that:
          - stdout is search(login_defs_pwquality_pam_d_config)
          - stdout is search(login_defs_pam_unix_pam_d_config)
          - stdout is search("pam_faillock.so")
      when: ansible_facts.distribution_major_version is version("7", ">=")
      vars:
        stdout: "{{ read_system_auth_config_result.stdout }}"

    - name: Verify that password-auth config matches inventory
      assert:
        that:
          - stdout is search("pam_faillock.so")
      when: ansible_facts.distribution_major_version is version("7", ">=")
      vars:
        stdout: "{{ read_password_auth_config_result.stdout }}"

    - name: Verify that login.defs config matches inventory
      assert:
        that:
          - stdout is search("PASS_MAX_DAYS 120")
          - stdout is search("PASS_MIN_DAYS 0")
          - stdout is search("PASS_MIN_LEN 8")
          - stdout is search("PASS_WARN_AGE 7")
          - stdout is search("PASS_ALWAYS_WARN yes")
          - stdout is search("PASS_CHANGE_TRIES 5")
          - stdout is search("CREATE_HOME yes")
          - stdout is search("DEFAULT_HOME no")
          - stdout is search("LASTLOG_ENAB yes")
          - stdout is search("LOG_OK_LOGINS yes")
          - stdout is search("LOG_UNKFAIL_ENAB yes")
          - stdout is search("LOGIN_RETRIES 3")
          - stdout is search("LOGIN_TIMEOUT 300")
          - stdout is search("UMASK 0027")
      vars:
        stdout: "{{ read_login_defs_config_result.stdout }}"
