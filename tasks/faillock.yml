---
# Faillock config tasks

- block:
    - name: Search if pam_faillock is configured in system-auth config file
      command: "cat {{ login_defs_system_auth_config_file }}"
      args:
        warn: no
      changed_when: no
      register: search_system_auth_config_result

    - name: Search if pam_faillock is configured in password-auth config file
      command: "cat {{ login_defs_password_auth_config_file }}"
      args:
        warn: no
      changed_when: no
      register: search_password_auth_config_result

    - block:
        - name: Include faillock auth configuration
          command: >-
            /usr/sbin/authconfig
            --enablefaillock
            --faillockargs='{{ fail_lock_args }}'
            --updateall
          vars:
            fail_lock_args: >-
              deny={{ login_defs_pam_faillock_deny }}
              unlock_time={{ login_defs_pam_faillock_unlock_time }}

        # See https://access.redhat.com/solutions/4175751 for details
        - name: Fix bug 1485490
          lineinfile:
            path: "{{ login_defs_password_auth_config_file }}"
            regexp: "^auth( +)required( +)pam_faillock.so( +)authfail"
            state: absent

        # See https://access.redhat.com/solutions/4175751 for details
        - name: Fix bug 1485490
          lineinfile:
            path: "{{ login_defs_password_auth_config_file }}"
            insertbefore: "^auth( +)required( +)pam_deny.so"
            line: "{{ login_defs_pam_faillock_pam_d_config_bugfix }}"
      when:
        - ansible_facts.distribution_major_version is version("7", "<=")
        - >-
          search_password_auth_config_result.stdout
          is not search("pam_faillock.so")
        - >-
          search_system_auth_config_result.stdout
            is not search("pam_faillock.so")
        - login_defs_pam_faillock_state == "present"

    - block:
        - name: Exclude faillock auth configuration
          command: >-
                    /usr/sbin/authconfig
                    --disablefaillock
                    --updateall
      when:
        - ansible_facts.distribution_major_version is version("7", "<=")
        - search_password_auth_config_result.stdout is search("pam_faillock.so")
        - search_system_auth_config_result.stdout is search("pam_faillock.so")
        - login_defs_pam_faillock_state == "absent"

    - block:
        - name: Check if authselect profile is loaded
          command: authselect current
          changed_when: no
          failed_when: no
          register: search_authselect_profile_result

        - name: Force basic sssd profile if not exists
          command: /usr/bin/authselect select sssd with-mkhomedir --force
          when: >-
            search_authselect_profile_result.stdout
            is search("No existing configuration detected")

        - name: Include faillock auth configuration
          command: authselect enable-feature with-faillock

        - name: Configure faillock params
          template:
            backup: yes
            src: faillock.conf.j2
            dest: "{{ login_defs_faillock_config_file }}"
            owner: root
            group: root
            mode: "0644"
      when:
        - ansible_facts.distribution_major_version is version("7", ">")
        - >-
          search_password_auth_config_result.stdout
             is not search("pam_faillock.so")
        - >-
          search_system_auth_config_result.stdout
             is not search("pam_faillock.so")
        - login_defs_pam_faillock_state == "present"

    - block:
        - name: Exclude faillock auth configuration
          command: authselect disable-feature with-faillock
      when:
        - ansible_facts.distribution_major_version is version("7", ">")
        - search_password_auth_config_result.stdout is search("pam_faillock.so")
        - search_system_auth_config_result.stdout is search("pam_faillock.so")
        - login_defs_pam_faillock_state == "absent"

  tags:
    - role::login_defs::faillock
