---
# Tasks for testing role
- name: run idempotence test
  hosts: localhost
  roles:
    - role: amtega.docker_presets
      docker_presets_images_json_query: >-
        [? starts_with(name, `centos-6`)
           || starts_with(name, `centos-7`)
           || starts_with(name, `fedora-29`)
           || starts_with(name, `fedora-30`) ]

    - role: amtega.docker_sandbox
      docker_sandbox_state: started
  tags:
    - sandbox

- name: test login_defs role
  hosts: docker_sandbox_containers
  roles:
    - amtega.login_defs
  vars:
    login_defs_login_retries: 3
    login_defs_create_home: yes
    login_defs_default_home: no
    login_defs_display_last_login: yes
    login_defs_log_ok_logins: yes
    login_defs_log_unknown_fail_usernames: yes
    login_defs_login_timeout: 300
    login_defs_default_new_file_permissions: "0027"
    login_defs_password_maximum_days: 120
    login_defs_password_minimum_days: 0
    login_defs_password_minimum_length: 8
    login_defs_password_warning_age: 7
    login_defs_password_always_warn: yes
    login_defs_password_change_tries: 5
    login_defs_password_remember: 5
  tasks:
    - name: read system-auth config file
      shell: "cat {{ login_defs_system_auth_config_file }}"
      changed_when: false
      register: read_system_auth_config_result

    - name: read password-auth config file
      shell: "cat {{ login_defs_password_auth_config_file }}"
      changed_when: false
      register: read_password_auth_config_result

    - name: read login.defs config file
      shell: "cat {{ login_defs_config_file }}"
      changed_when: false
      register: read_login_defs_config_result

    - name: verify that system-auth config matches inventory
      assert:
        that:
          - stdout is search(login_defs_cracklib_pam_d_config)
          - stdout is search(login_defs_pam_unix_pam_d_config)
          - stdout is search("pam_faillock.so")
      when: ansible_facts.distribution_major_version is version("6", "<=")
      vars:
        stdout: "{{ read_system_auth_config_result.stdout }}"

    - name: verify that system-auth config matches inventory
      assert:
        that:
          - stdout is search(login_defs_pwquality_pam_d_config)
          - stdout is search(login_defs_pam_unix_pam_d_config)
          - stdout is search("pam_faillock.so")
      when: ansible_facts.distribution_major_version is version("7", ">=")
      vars:
        stdout: "{{ read_system_auth_config_result.stdout }}"

    - name: verify that password-auth config matches inventory
      assert:
        that:
          - stdout is search("pam_faillock.so")
      vars:
        stdout: "{{ read_password_auth_config_result.stdout }}"



    - name: verify that login.defs config matches inventory
      assert:
        that:
          - stdout is search("PASS_MAX_DAYS 120")
          - stdout is search("PASS_MIN_DAYS 0")
          - stdout is search("PASS_MIN_LEN 8")
          - stdout is search("PASS_WARN_AGE 7")
          - stdout is search("PASS_ALWAYS_WARN yes")
          - stdout is search("PASS_CHANGE_TRIES 5")
          - stdout is search("CREATE_HOME yes")
          - stdout is search("DEFAULT_HOME no")
          - stdout is search("LASTLOG_ENAB yes")
          - stdout is search("LOG_OK_LOGINS yes")
          - stdout is search("LOG_UNKFAIL_ENAB yes")
          - stdout is search("LOGIN_RETRIES 3")
          - stdout is search("LOGIN_TIMEOUT 300")
          - stdout is search("UMASK 0027")
      vars:
        stdout: "{{ read_login_defs_config_result.stdout }}"
  tags:
    - idempotence

- name: cleanup docker docker sandbox
  hosts: localhost
  roles:
    - role: amtega.docker_sandbox
      docker_sandbox_state: absent
  tags:
    - cleanup
    - sandbox
